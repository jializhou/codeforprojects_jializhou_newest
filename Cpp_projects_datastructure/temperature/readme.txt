/*******************************************************************************
 * 在完成本作业的过程中，我从以下各位那里得到过以下方面的启发和帮助：
计算机系0字班同学的思路及hash函数的构造
 * 在我提交的程序中，还在对应的位置以注释形式记录了他们的具体帮助。
 *******************************************************************************
 * 我参考了以下资料：

 * 在我提交的程序中，还在对应的位置以注释形式记录了具体的参考内容。
 *******************************************************************************
 * 我独立完成了本程序除以上方面之外的所有工作，包括分析、设计、编码、调试与测试。
 * 我清楚地知道，从以上方面获得的信息在一定程度上降低了作业难度，可能影响起评分。
 *******************************************************************************
 * 我从未抄袭或盗用过他人的程序，不管是原封不动地复制，还是经过了某些等价转换。
 * 我未曾也不会向同一课程（包括此后各届）的同学复制或公开我这份程序的代码。
 * 我编写这个程序无意于破坏或妨碍任何计算机系统的正常运转。
 * 我清楚地知道，以上情况均为本课程纪律所禁止，若违反，对应的作业成绩将按-100计。
 *******************************************************************************
 * 【周嘉莉】
 * 【2010010359】
 * 【2012-12-8】
 ******************************************************************************/
【算法实现】选择使用数组储存数据。*x,*y分别装入观察站的地理坐标，temp装入的是温度信息，*tpx,*tpy分别用作对x,y进行快速排序（tpx[2]=8表示排在第2位的是x[8],rank[8]=2表示x[8]排在第2位）升序，rankx[i]即为最终x[i]的排名。
为了方便计算一个范围内的温度值，定义了一个long long 型的数组sum。算出比点p小的点(不包括点p本身)的所有温度值之和sum，之后范围的四点sum相加减,再对少数点做处理即可得到范围内的温度之和。sum[i][j]表示的是rankx=i,ranky=j左下方的温度之和，相当于一个hashtable（映射关系）
【遇到的问题】最开始做的时候用的是range tree，可是编译不通过，能力太弱了啊。。。之后改用数组存储，想到另外开辟一个rank数组记录原始数组里数据的排名。可是后来的计算温度之和如果每次查询来计算的话就会超时了，相当于每次查询时间为o(r)(r和n一个数量级），经同学提醒要改用hash函数来映射就好了，可是不会用hash函数，最后利用别人的hash函数改造了一下。
是用一个hash函数（多项式：j * divs）将x坐标排名为rank[i],y坐标排名为rank[j]左下角的点数及temperature之和映射到了一个平面的点上。其中divs的选取是希望时间复杂度和空间负责度都满足要求。如果要使得时间复杂度尽可能的小：O(n*n/divs)+m*(logn+divs))=2500000000/divs+500000*divs 当divs=70时取得最小值，但同时又要考虑到空间的限制，所以最后我选取了277这个素数。
【时间复杂度分析】o(m)(其中m<n)
【空间复杂度分析】o(n*m)
